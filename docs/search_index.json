[
["index.html", "Statistical Models Introduction", " Statistical Models Yue Zhao 2017-12-26 Introduction This book focuses on the theory, design, and implementation of various statistical and machine learning models. "],
["setup-the-computing-environment.html", "1 Setup the Computing Environment 1.1 Install R 1.2 Install Python 1.3 Writing Notes with R::bookdown 1.4 Continuous Integration with Travis", " 1 Setup the Computing Environment 1.1 Install R We recommend install both regular R and the Microsoft R-Open. Even though the later is better optimized, it fails to install packages with compiled code, (see https://github.com/Microsoft/microsoft-r-open/issues/17). The solution is to install packages in regular R and use a shared library directory for both R instances. We recommend install R before install Anaconda Python, as the later will pollute the system environment (for instance, it might throw the libcurl version error.) After downloading the source code from https://www.r-project.org: # configuration # run ./configure --help to see all available options ./configure --prefix=/apps/R/R-x.y.z --enable-memory-profiling \\ --enable-R-profiling \\ --enable-R-shlib # build and install R make make install # Specify the directory for R packages. This is only needed if we # want to install Microsoft R-Open as well. mkdir -p /apps/R/lib-x.y.z echo &#39;.libPaths(&quot;/apps/R/lib-x.y.z&quot;)&#39; &gt;&gt; ~/.Rprofile # now run R /apps/R/R-x.y.z/bin/R --version 1.2 Install Python 1.3 Writing Notes with R::bookdown 1.3.1 Create a new book on Github Follow the steps below to write a book named Statistical Models. First initiate the working directory: mkdir StatisticalModels cd StatisticalModels Create file StatisticalModels.Rproj. This enables Build -&gt; Build Book in the RStudio IDE. Version: 1.0 RestoreWorkspace: Default SaveWorkspace: Default AlwaysSaveHistory: Default EnableCodeIndexing: Yes UseSpacesForTab: Yes NumSpacesForTab: 2 Encoding: UTF-8 RnwWeave: knitr LaTeX: pdfLaTeX AutoAppendNewline: Yes StripTrailingWhitespace: Yes BuildType: Website Create file index.Rmd: --- title: &quot;Statistical Models&quot; author: &quot;Yue Zhao&quot; date: &quot;2017-12-26&quot; site: bookdown::bookdown_site output: bookdown::gitbook documentclass: book biblio-style: apalike link-citations: yes github-repo: giantwhale/StatisticalModels description: &quot;Statistical Models&quot; --- # Introduction {-} omitted ... Create file _bookdown.yml, so bookdown knows to output html files to the docs folder (need by github). output_dir: &quot;docs&quot; Now we can start writing notes in .Rmd format. To enable github page, click on Settings, then go to GitHub Pages Session -&gt; Source. Change None to Master Branch /docs folder. Once done, a link will appear in the same section. 1.4 Continuous Integration with Travis Travis works well with github. It helps us build, test and deploy so we can focus on coding. The workflow is as the following: . User runs build. . Travis CI clones the GitHub repo into a brand new virtual env, build and test the code. . If one or more tasks failed, the build is considered broken. . If none of the tasks failed, the build is considered passed. Travis then deploys the code. Unfinished â€¦ "],
["linear-regression-models.html", "2 Linear Regression Models", " 2 Linear Regression Models xxx "],
["esl-overview-of-supervised-learning.html", "3 ESL - Overview of Supervised Learning", " 3 ESL - Overview of Supervised Learning library(ElemStatLearn) library(data.table) library(ggplot2) data(&quot;mixture.example&quot;) mixt &lt;- mixture.example train &lt;- data.table(X1=mixt$x[,1], X2=mixt$x[,2], Y=mixt$y) f &lt;- ggplot(train) + geom_point(aes(x=X1, y=X2, color=factor(Y))) f &lt;- f + labs(x=&#39;&#39;, y=&#39;&#39;, color=&#39;y&#39;) f &lt;- f + theme_bw() %+replace% theme(legend.position=&#39;none&#39;) print(f) "]
]
